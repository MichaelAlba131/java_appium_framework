name: Android Appium CI with Emulator

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Set JAVA_HOME env variable
        run: echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

      - name: Install Android SDK cmdline-tools
        env:
          ANDROID_SDK_ROOT: $RUNNER_TEMP/android-sdk
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mv cmdline-tools latest
          rm cmdline-tools.zip

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install SDK packages
        run: |
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-33" \
            "emulator" \
            "system-images;android-33;google_apis_playstore;arm64-v8a"

      - name: Check avdmanager functionality
        run: |
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          avdmanager list device

      - name: Install system image (optional, if not done before)
        run: |
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT "system-images;android-33;google_apis_playstore;arm64-v8a"

      - name: Set ANDROID_HOME and update PATH
        run: |
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      - name: Create AVD
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            -n ciEmulator \
            -k "system-images;android-33;google_apis_playstore;arm64-v8a" \
            --device "pixel" \
            --force

      - name: Create Android Virtual Device
        run: echo "no" | avdmanager create avd -n ciEmulator -k "system-images;android-33;google_apis_playstore;arm64-v8a" --force

      - name: Fix HOME for AVD creation
        run: echo "HOME=$HOME" >> $GITHUB_ENV

      - name: List available AVDs
        run: |
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          avdmanager list avd

      - name: Start Android Emulator
        env:
          AVD_NAME: ciEmulator
          HOME: /home/runner
          ANDROID_AVD_HOME: /home/runner/.config/.android/avd
        run: |
          export PATH=$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$PATH

          echo "Listing available AVDs:"
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager list avd

          echo "Starting emulator: $AVD_NAME"
          nohup $ANDROID_SDK_ROOT/emulator/emulator -avd $AVD_NAME -no-window -no-audio -no-snapshot &

          echo "Waiting for device to be ready..."
          $ANDROID_SDK_ROOT/platform-tools/adb wait-for-device

          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$($ANDROID_SDK_ROOT/platform-tools/adb shell getprop sys.boot_completed | tr -d '\r')
            echo "Boot completed: $boot_completed"
            sleep 5
          done

      - name: Install Node.js & Appium
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Appium CLI
        run: npm install -g appium

      - name: Run tests
        run: mvn clean test